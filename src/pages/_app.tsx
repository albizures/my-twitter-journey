import 'windi.css';
import Head from 'next/head';
import superjson from 'superjson';
import type { AppProps as NextAppProps } from 'next/app';
import { Favicon } from '../components/Favicon';
import { SessionProvider } from 'next-auth/react';
import type { Session } from 'next-auth';
import { withTRPC } from '@trpc/next';
import { APP_FAVICON, APP_TITLE } from '../config';
import type { ServerRouter } from '../server/router';
import { url } from 'inspector';

interface AppProps {
	Component: NextAppProps['Component'];
	pageProps: NextAppProps['pageProps'] & {
		session: Session | null | undefined;
	};
}

function App(props: AppProps) {
	const { Component, pageProps } = props;
	const { session, ...morePageProps } = pageProps;
	return (
		<SessionProvider session={session}>
			<Head>
				<title>{APP_TITLE}</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<Favicon icon={APP_FAVICON} />
			</Head>
			<Component {...morePageProps} />
		</SessionProvider>
	);
}

function getUrl() {
	if (typeof location === 'object') {
		return `${location.origin}/api/trpc`;
	}

	if (process.env.NEXT_PUBLIC_VERCEL_URL) {
		return `https://${process.env.NEXT_PUBLIC_VERCEL_URL}/api/trpc`;
	}

	return 'http://locahost:3000/api/trpc';
}

export default withTRPC<ServerRouter>({
	config() {
		const url = getUrl();

		return { url, transformer: superjson };
	},
})(App);
