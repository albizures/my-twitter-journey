// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  oauth_token        String? @db.Text
  oauth_token_secret String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  roles         Role[]
  accounts      Account[]
  sessions      Session[]
}

model TwitterUser {
  id              String                @id @unique
  lastTimeChecked DateTime
  tweets          Tweet[]
  snapshots       TwitterUserSnapshot[]
}

model Tweet {
  id             String      @id
  text           String
  userId         String
  user           TwitterUser @relation(fields: [userId], references: [id], onDelete: Cascade)
  hashtags       String[]
  mentions       String[]
  media          String[]
  polls          String[]
  replayTo       String?
  quote          String?
  source         String
  lang           String
  createdAt      DateTime
  sensitive      Boolean
  conversationId String?
}

model TwitterUserSnapshot {
  id             String      @id @default(cuid())
  username       String
  name           String
  followerCount  Int
  followingCount Int
  tweetCount     Int
  pinnedTweetId  String?
  bio            String?
  location       String?
  website        String?
  createdAt      DateTime
  userId         String
  verified       Boolean
  user           TwitterUser @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
